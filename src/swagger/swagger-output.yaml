openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
  - url: 'http://localhost:3000'
paths:
  /api/auth/signup:
    post:
      summary: Sign up
      description: Signs up a new user.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                name:
                  type: string
                  required: true
              required:
                - email
                - password
                - name
      responses:
        '201':
          description: User signed up successfully
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1auth~1signup/post/requestBody/content/application~1json/schema'
  /api/auth/signin:
    post:
      summary: Sign in
      description: Signs in a user.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
              required:
                - email
                - password
      responses:
        '200':
          description: User signed in successfully
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1auth~1signin/post/requestBody/content/application~1json/schema'
  /api/users:
    get:
      summary: Get all users
      description: Returns a list of all users.
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
        - name: search_keyword
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Users retrieved successfully
  '/api/users/{id}':
    get:
      summary: Get a user
      description: Returns a user.
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
    put:
      summary: Update user
      description: Updates a user.
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                add_roles:
                  type:
                    - string
                  required: true
                remove_roles:
                  type:
                    - string
                  required: true
                status:
                  type: string
                  required: true
      responses:
        '200':
          description: User updated successfully
  /api/users/me:
    get:
      summary: Get current user
      description: Returns the current user.
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user retrieved successfully
  /api/categories:
    post:
      summary: Create a new category
      description: Creates a new category with title.
      tags:
        - Categories
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  required: true
                description:
                  type: string
                  required: false
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
    get:
      summary: Get all categories
      description: Returns a list of all categories.
      tags:
        - Categories
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of categories
  '/api/categories/{id}':
    get:
      summary: Get a category by ID
      description: Returns a category by ID.
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category
    put:
      summary: Update an existing category
      description: Updates an existing category with title and description.
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  required: false
                description:
                  type: string
                  required: false
      responses:
        '200':
          description: Category updated successfully
    delete:
      summary: Delete a category
      description: Deletes a category by ID.
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category deleted successfully
  /api/products:
    post:
      summary: Create a new product
      description: 'Creates a new product with title, description, price, stock, and optional images.'
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product created successfully
                  data:
                    type: object
                    $ref: '#/paths/~1api~1products/post/requestBody/content/multipart~1form-data/schema'
    get:
      summary: Get all products
      description: 'Fetches a list of products with optional filtering, searching, and pagination.'
      tags:
        - Products
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: category_id
          in: query
          description: Filter by category ID
          required: false
          schema:
            type: string
        - name: search_keyword
          in: query
          description: Search products by title or description (case-insensitive)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response with product list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1api~1products/post/requestBody/content/multipart~1form-data/schema'
                  meta_data:
                    type: object
                    properties:
                      total_data:
                        type: integer
                        example: 100
                      filtered_data:
                        type: integer
                        example: 10
  '/api/products/{id}':
    get:
      summary: Get a product by ID
      description: Retrieves a product by its ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found successfully
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1products/post/requestBody/content/multipart~1form-data/schema'
    put:
      summary: Update an existing product
      description: 'Updates an existing product with title, description, price, stock, and optional images.'
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Wireless Mouse
                description:
                  type: string
                  example: High-quality wireless mouse with ergonomic design
                category_id:
                  type: string
                  example: '1234567890'
                price:
                  type: number
                  example: 50
                stock:
                  type: number
                  example: 100
                thumbnail:
                  type: string
                  format: binary
                  description: Product thumbnail image (single file)
                product_feature_images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Multiple feature images (max 5 files)
              required:
                - title
                - description
                - category_id
                - price
                - stock
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1products/post/requestBody/content/multipart~1form-data/schema'
    delete:
      summary: Delete a product
      description: Deletes a product.
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
  '/api/products/{id}/thumbnail':
    put:
      summary: Change the thumbnail image of a product
      description: Changes the thumbnail image of a product.
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
                  description: Product thumbnail image (single file)
              required:
                - thumbnail
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1products/post/requestBody/content/multipart~1form-data/schema'
    delete:
      summary: Remove the thumbnail image of a product
      description: Removes the thumbnail image of a product.
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product thumbnail removed successfully
  '/api/products/{id}/images':
    post:
      summary: Add feature images to a product
      description: Adds feature images to a product.
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_feature_images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Multiple feature images (max 5 files)
              required:
                - product_feature_images
      responses:
        '200':
          description: Product feature images added successfully
    delete:
      summary: Remove feature images from a product
      description: Removes feature images from a product.
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                public_ids:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Product feature images removed successfully
